% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_scenarios.R
\name{run_scenarios}
\alias{run_scenarios}
\title{Run a batch of Management Strategy Evaluation (MSE) scenarios}
\usage{
run_scenarios(
  scenarios,
  niter = 1000,
  seed = "reproducable",
  params = "Ohlberger",
  output_dir = paste0(here::here(), "/outputs"),
  figure_dir = paste0(here::here(), "/figures")
)
}
\arguments{
\item{scenarios}{Selector passed to \code{\link{select_scenarios}()}.
Typically one of:
\itemize{
\item \code{"all"} — run all allowed scenarios;
\item a single dplyr-style filter \strong{string}, e.g.
\code{"selectivity == 'unselective' & factorMSY \%in\% c(0.75, 1.50)"};
\item a numeric vector of scenario IDs (e.g., \code{c(1, 12, 37)}).
}
See \code{\link{select_scenarios}()} for details on the selector syntax and
built-in constraints.}

\item{niter}{Integer. Number of Monte Carlo iterations \emph{per scenario}.
Default \code{1000}.}

\item{seed}{Character. How to seed simulations across the scenario–iteration
grid. Must be exactly \code{"reproducable"} (seeds are \code{1:(niter*nscen)})
or \code{"random"} (seeds are sampled from \code{1:1000000}). Any other value
triggers an error.}

\item{output_dir}{String. Intended output directory path (default:
\code{here::here()}/\code{outputs}). \strong{Note:} The current implementation
writes files to \code{file.path(here::here(), "out")} regardless of this value.}

\item{figure_dir}{String. Intended figure directory path (default:
\code{here::here()}/\code{figures}). \strong{Note:} Not used by the current
implementation.}
}
\value{
No return value. Called for its side effects of running simulations and
writing files to disk. Progress and timing information are printed to the console.
}
\description{
High-level interface to run the simulation across a set of scenarios and
Monte Carlo iterations. This function selects which scenarios to run,
seeds each run for reproducibility or randomness, executes the simulation,
and saves outputs to disk.
}
\section{What this function does}{

\itemize{
\item Calls \code{\link{select_scenarios}()} with \code{enforce_constraints = TRUE}
to determine which scenarios to run.
\item Builds a scenario–iteration seed list based on \code{seed}.
\item Iterates over scenarios and iterations, sourcing parameter values from
\code{file.path(here::here(), "R_draft/parameters.R")} and calling
\code{SizeShiftsImplicationsV2::run_model()}.
\item Accumulates per-iteration outputs (e.g., SR parameters, time series, age/size
structures) into nested lists.
\item Saves artifacts (see below) into \code{file.path(here::here(), "out")}.
}
}

\section{Files written}{

Writing occurs under \code{file.path(here::here(), "out")} (directory is created
if needed). The following files are produced, with a timestamp:
\itemize{
\item \code{run_<timestamp>.Rdata} — workspace image via \code{save.image()}.
\item \code{run_<timestamp>_parms.Rdata} — parameters list via \code{saveRDS()}.
\item \code{run_<timestamp>_scen.xlsx} — scenario table via \code{write.xlsx()}.
}
}

\section{Dependencies and expectations}{

\itemize{
\item Requires packages: \pkg{here}, \pkg{progress}; and an \code{write.xlsx()}
provider (e.g., \pkg{openxlsx}).
\item The file \code{R_draft/parameters.R} must exist under the project root
returned by \code{here::here()} and evaluate to a parameter list used by
\code{run_model()}.
\item The working directory is set to \code{file.path(here::here(), "out")}
near the end of execution (\code{setwd()}), which persists after the
function returns.
}
}

\section{Notes}{

\itemize{
\item This function can be computationally intensive (total runs =
\code{niter * number_of_selected_scenarios}). A console time estimate is printed.
\item A progress bar is initialized; if progress updates are desired, enable
\code{pb\$tick()} within the inner loop.
}
}

\examples{
\dontrun{
## Run all allowed scenarios with few iterations and reproducible seeds
run_scenarios("all", niter = 1000, seed = "reproducable")

## Run only unselective-net scenarios at conservative/aggressive MSY, no DLM mgmt
sel <- "selectivity == 'unselective' & mgmt \%in\% c('smsy_goal','s_eq_goal') & factorMSY \%in\% c(0.75, 1.50)"
run_scenarios(sel, niter = 1000, seed = "reproducable")

## Run specific scenario IDs
run_scenarios(c(1, 12, 37, 60), niter = 500, seed = "random")
}
}
\seealso{
\code{\link{select_scenarios}()} for scenario selection;
\code{\link{run_model}()} for the underlying single-simulation routine.
}
